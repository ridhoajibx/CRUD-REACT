{"version":3,"sources":["Components/Button/index.js","Components/MultiSelect/index.js","Components/CreateNewPost.js","Components/ModifyPost.js","Components/Post.js","App.js","index.js"],"names":["CustomButton","props","buttontext","onSubmit","onClick","data-test","MultiSelect","data","defaultValueTag","selectedItem","setSelectedItem","isSelected","value","find","el","handleSelect","selectedItemUpdated","filter","handleDeselect","useEffect","className","htmlFor","as","onChange","isOpen","Button","length","fill","viewBox","xmlns","fillRule","d","clipRule","show","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Options","map","tag","selected","Option","active","CreateNewPost","savePost","id","type","name","placeholder","savePostTitleToState","ref","getTitle","required","allTags","tags","setTags","rows","savePostBodyToState","getBody","toggleCreateNewPost","ModifyPost","updatePost","defaultValue","title","autoFocus","body","toggleModifyPostComponent","Post","editPost","deletePost","editBtnProps","deleteBtnProps","idx","href","App","useState","setTitle","setBody","allPosts","setAllPosts","isCreateNewPost","setIsCreateNewPost","isModifyPost","setIsModifyPost","editPostId","setEditPostId","useRef","event","target","modifiedPost","eachPost","preventDefault","Date","now","current","post","updatedPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.daa23db4.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nconst CustomButton = (props) => {\n    const { buttontext, onSubmit } = props;\n    return (\n        <button onClick={onSubmit} data-test=\"buttonComponent\" {...props}>\n            <span>{buttontext}</span>\n        </button>\n    )\n}\n\nexport { CustomButton };\n","import { Listbox, Transition } from \"@headlessui/react\";\nimport { useEffect } from \"react\";\n\nfunction MultiSelect(props) {\n    const { data, defaultValueTag, selectedItem, setSelectedItem } = props;\n\n    function isSelected(value) {\n        return selectedItem.find((el) => el === value) ? true : false;\n    }\n\n    function handleSelect(value) {\n        if (!isSelected(value)) {\n            const selectedItemUpdated = [\n                ...selectedItem,\n                data.find((el) => el === value)\n            ];\n            setSelectedItem(selectedItemUpdated);\n        } else {\n            handleDeselect(value);\n        }\n    }\n\n    function handleDeselect(value) {\n        const selectedItemUpdated = selectedItem.filter((el) => el !== value);\n        setSelectedItem(selectedItemUpdated);\n    }\n\n    useEffect(() => {\n        if (defaultValueTag) {\n            setSelectedItem(defaultValueTag)\n        }\n    }, [defaultValueTag, setSelectedItem]);\n\n    return (\n        <div className=\"relative w-full mb-3\">\n            <label htmlFor=\"freq\" className=\"uppercase block text-xs font-bold text-gray-100\">Tags</label>\n            <Listbox\n                as=\"div\"\n                value={selectedItem}\n                onChange={(value) => handleSelect(value)}\n            >\n                {({ isOpen }) => (\n                    <>\n                        <Listbox.Button className={\n                            `mt-1 flex items-center justify-between w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none text-sm overflow-hidden`\n                        }>\n                            <span className=\"block lowercase text-secondary-500\">\n                                {selectedItem.length < 1\n                                    ? \"Tags...\"\n                                    : `${selectedItem}`}\n                            </span>\n                            <div className=\"px-4\">\n                                <svg\n                                    className={\n                                        `w-5 h-5 duration-300 z-40 \n                                                        ${isOpen ? 'transform -rotate-180' : ''}`\n                                    }\n                                    fill=\"currentColor\"\n                                    viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"\n                                >\n                                    <path fillRule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clipRule=\"evenodd\"></path>\n                                </svg>\n                            </div>\n                        </Listbox.Button>\n                        <Transition\n                            show={isOpen}\n                            enter=\"transition ease-in-out duration-100\"\n                            enterFrom=\"transform scale-75\"\n                            enterTo=\"transform scale-100\"\n                            leave=\"transition ease-in-out duration-75\"\n                            leaveFrom=\"transform scale-100\"\n                            leaveTo=\"transform scale-75\"\n                        >\n                            <Listbox.Options className=\"absolute right-0 w-full z-50 text-sm bg-white border-1 border-gray-300 shadow-lg rounded-b-lg focus:outline-none overflow-hidden\">\n                                {data.map((tag) => {\n                                    const selected = isSelected(tag);\n                                    return (\n                                        <Listbox.Option key={tag} value={tag}>\n                                            {({ active }) => (\n                                                <div\n                                                    className={`${active\n                                                        ? \"text-white bg-primary-600\"\n                                                        : \"text-gray-900\"\n                                                        } cursor-pointer select-none relative py-2 pl-8 pr-4`}\n                                                >\n                                                    <span\n                                                        className={`${selected ? \"font-semibold\" : \"font-normal\"\n                                                            } block truncate`}\n                                                    >\n                                                        {tag}\n                                                    </span>\n                                                    {selected && (\n                                                        <span\n                                                            className={`${active ? \"text-white\" : \"text-primary-600\"\n                                                                } absolute inset-y-0 left-0 flex items-center pl-1.5`}\n                                                        >\n                                                            <svg\n                                                                className=\"h-5 w-5\"\n                                                                xmlns=\"http://www.w3.org/2000/svg\"\n                                                                viewBox=\"0 0 20 20\"\n                                                                fill=\"currentColor\"\n                                                            >\n                                                                <path\n                                                                    fillRule=\"evenodd\"\n                                                                    d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                                                                    clipRule=\"evenodd\"\n                                                                />\n                                                            </svg>\n                                                        </span>\n                                                    )}\n                                                </div>\n                                            )}\n                                        </Listbox.Option>\n                                    );\n                                })}\n                            </Listbox.Options>\n                        </Transition>\n                    </>\n                )}\n            </Listbox>\n        </div>\n    );\n}\n\nexport default MultiSelect;\n","import React from \"react\";\nimport { CustomButton } from \"./Button\";\nimport MultiSelect from \"./MultiSelect\";\n\nconst CreateNewPost = (props) => {\n    return (\n        <div className=\"relative\">\n            <h1 className=\"my-4 text-3xl sm:text-4xl font-bold text-center\">Create article</h1>\n            <div className=\"max-w-screen-lg mx-auto pb-16\">\n                <div className=\"p-10 sm:p-12 md:p-16 bg-secondary-500 text-gray-100 rounded-lg relative\">\n                    <div className=\"mx-auto max-w-4xl\">\n                        <form onSubmit={props.savePost}>\n                            <div className=\"flex flex-col sm:flex-row justify-between\">\n                                <div className=\"sm:w-5/12 flex flex-col\">\n                                    <div className=\"relative py-5 mt-6\">\n                                        <label className=\"absolute top-0 left-0 tracking-wide font-semibold text-sm\" htmlFor=\"title\">Title</label>\n                                        <input\n                                            className=\"w-full bg-transparent text-base font-medium tracking-wide border-b-2 py-2 text-gray-100 hocus:border-pink-400 focus:outline-none transition duration-200\"\n                                            id=\"title\"\n                                            type=\"text\"\n                                            name=\"title\"\n                                            placeholder=\"E.g. Title\"\n                                            onChange={props.savePostTitleToState}\n                                            ref={props.getTitle}\n                                            required\n                                        />\n                                    </div>\n\n                                    <div className=\"relative py-5 mt-6\">\n                                        <MultiSelect \n                                            data={props.allTags}\n                                            selectedItem={props.tags}\n                                            setSelectedItem={props.setTags}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"sm:w-5/12 flex flex-col\">\n                                    <div className=\"relative py-5 mt-6\">\n                                        <label className=\"absolute top-0 left-0 tracking-wide font-semibold text-sm\" htmlFor=\"name-input\">Content</label>\n                                        <textarea\n                                            className=\"w-full bg-transparent text-gray-100 text-base font-medium tracking-wide border-b-2 py-2 hocus:border-pink-400 focus:outline-none transition duration-200\"\n                                            id=\"body\"\n                                            name=\"body\"\n                                            placeholder=\"E.g. Details about your content\"\n                                            rows=\"5\"\n                                            required\n                                            onChange={props.savePostBodyToState}\n                                            ref={props.getBody}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"flex justify-end\">\n                                <CustomButton\n                                    type=\"submit\"\n                                    className=\"btn-primary text-primary-800 mr-2\"\n                                    buttontext=\"Simpan\"\n                                />\n                                <CustomButton\n                                    type=\"button\"\n                                    className=\"btn-danger text-red-500\"\n                                    buttontext=\"Cancel\"\n                                    onClick={props.toggleCreateNewPost}\n                                />\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CreateNewPost;\n","import React from \"react\";\nimport { CustomButton } from \"./Button\";\nimport MultiSelect from \"./MultiSelect\";\n\nconst ModifyPost = (props) => {\n    // console.log(props)\n    return (\n        <div className=\"relative\">\n            <h1 className=\"my-4 text-3xl sm:text-4xl font-bold text-center\">Modify article</h1>\n            <div className=\"max-w-screen-lg mx-auto pb-16\">\n                <div className=\"p-10 sm:p-12 md:p-16 bg-secondary-500 text-gray-100 rounded-lg relative\">\n                    <div className=\"mx-auto max-w-4xl\">\n                        <form onSubmit={props.updatePost}>\n                            <div className=\"flex flex-col sm:flex-row justify-between\">\n                                <div className=\"sm:w-5/12 flex flex-col\">\n                                    <div className=\"relative py-5 mt-6\">\n                                        <label className=\"absolute top-0 left-0 tracking-wide font-semibold text-sm\" htmlFor=\"title\">Title</label>\n                                        <input\n                                            className=\"w-full bg-transparent text-base font-medium tracking-wide border-b-2 py-2 text-gray-100 hocus:border-pink-400 focus:outline-none transition duration-200\"\n                                            id=\"title\"\n                                            type=\"text\"\n                                            name=\"title\"\n                                            placeholder=\"E.g. Title\"\n                                            defaultValue={props.title}\n                                            autoFocus={true}\n                                            onChange={props.savePostTitleToState}\n                                            required\n                                        />\n                                    </div>\n\n                                    <div className=\"relative py-5 mt-6\">\n                                        <MultiSelect \n                                            data={props.allTags}\n                                            selectedItem={props.tags}\n                                            setSelectedItem={props.setTags}\n                                            defaultValueTag={props.defaultValueTag}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"sm:w-5/12 flex flex-col\">\n                                    <div className=\"relative py-5 mt-6\">\n                                        <label className=\"absolute top-0 left-0 tracking-wide font-semibold text-sm\" htmlFor=\"name-input\">Content</label>\n                                        <textarea\n                                            className=\"w-full bg-transparent text-gray-100 text-base font-medium tracking-wide border-b-2 py-2 hocus:border-pink-400 focus:outline-none transition duration-200\"\n                                            id=\"body\"\n                                            name=\"body\"\n                                            placeholder=\"E.g. Details about your content\"\n                                            rows=\"5\"\n                                            required\n                                            defaultValue={props.body}\n                                            onChange={props.savePostBodyToState}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"flex justify-end\">\n                                <CustomButton\n                                    type=\"submit\"\n                                    className=\"btn-primary text-primary-800 mr-2\"\n                                    buttontext=\"Update\"\n                                />\n                                <CustomButton\n                                    type=\"button\"\n                                    className=\"btn-danger text-red-500\"\n                                    buttontext=\"Cancel\"\n                                    onClick={props.toggleModifyPostComponent}\n                                />\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ModifyPost;\n","import React from 'react'\nimport { CustomButton } from './Button';\n\nexport default function Post(props) {\n    const { id, title, body, tags, editPost, deletePost } = props;\n\n    const editBtnProps = {\n        className: \"btn-primary text-primary-500 mx-2\",\n        buttontext: \"Edit\",\n        type: \"button\",\n        onSubmit: () => editPost(id)\n    }\n\n    const deleteBtnProps = {\n        className: \"btn-danger text-red-500 mx-1\",\n        buttontext: \"Delete\",\n        type: \"button\",\n        onSubmit: () => deletePost(id)\n    }\n    return (\n        <div className=\"w-full md:w-1/2 lg:w-1/3 mt-2\">\n            <div className=\"mx-auto\">\n                <section className=\"max-w-sm rounded-lg bg-secondary-500 shadow-lg\">\n                    <div className=\"p-4\">\n                        <div className=\"text-primary-500 uppercase font-bold text-lg\">{title}</div>\n                        <div className=\"text-sm text-white mt-4 font-bold\">\n                            {body}\n                        </div>\n                        <div className=\"flex flex-row flex-wrap justify-between sm:items-center font-semibold tracking-wide text-gray-600 uppercase text-xs\">\n                            <div className=\"flex items-center mt-4\">\n                                {tags.length > 0 && tags.map((tag, idx) => (\n                                    <a key={idx} href=\"!#\" className=\"lowercase mx-1\">\n                                        #{tag}\n                                    </a>\n                                ))}\n                            </div>\n                        </div>\n                        <div className=\"mt-8 flex justify-between items-center\">\n                            <CustomButton {...editBtnProps} />\n                            <CustomButton {...deleteBtnProps} />\n                        </div>\n                    </div>\n                </section>\n            </div>\n        </div>\n    )\n}\n","import { useRef, useState } from 'react';\nimport './App.css';\nimport { CustomButton } from './Components/Button';\nimport CreateNewPost from './Components/CreateNewPost';\nimport ModifyPost from './Components/ModifyPost';\nimport Post from './Components/Post';\n\nconst allTags = [\"react\", \"vue\", \"svelte\", \"next\", \"gatsby\"];\n\nfunction App() {\n    const [title, setTitle] = useState(\"\");\n    const [body, setBody] = useState(\"\");\n    const [tags, setTags] = useState([]);\n\n    const [allPosts, setAllPosts] = useState([\n        {\n            id: 1,\n            title: \"Popular Frontend Framework\",\n            body: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Laboriosam non veniam voluptates voluptatum laudantium eaque nesciunt ea accusantium tempore nihil.\",\n            tags: [\"react\", \"vue\"]\n\n        },\n        {\n            id: 2,\n            title: \"New Face\",\n            body:\n                \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptas amet deserunt aliquid doloremque dolore eaque maiores dignissimos molestiae voluptatum. Quisquam!\",\n            tags: [\"svelte\"]\n        },\n        {\n            id: 3,\n            title: \"React Framework\",\n            body:\n                \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptas amet deserunt aliquid doloremque dolore eaque maiores dignissimos molestiae voluptatum. Quisquam!\",\n            tags: [\"gatsby\", \"next\"]\n        }\n    ]);\n\n    const [isCreateNewPost, setIsCreateNewPost] = useState(false);\n    const [isModifyPost, setIsModifyPost] = useState(false);\n    const [editPostId, setEditPostId] = useState(\"\");\n\n    const toggleCreateNewPost = () => {\n        setIsCreateNewPost(!isCreateNewPost);\n    };\n\n    const getTitle = useRef();\n    const getBody = useRef();\n\n    const savePostTitleToState = (event) => {\n        setTitle(event.target.value);\n    };\n\n    const savePostBodyToState = (event) => {\n        setBody(event.target.value);\n    };\n\n    const savePost = (event) => {\n        event.preventDefault();\n        const id = Date.now();\n        setAllPosts([...allPosts, { title, body, id, tags }]);\n        getTitle.current.value = \"\";\n        getBody.current.value = \"\";\n        setTags([])\n        toggleCreateNewPost();\n    };\n\n    const toggleModifyPostComponent = () => {\n        setIsModifyPost(!isModifyPost);\n    };\n\n    const editPost = (id) => {\n        setEditPostId(id);\n        toggleModifyPostComponent();\n    };\n\n    const updatePost = (event) => {\n        event.preventDefault();\n        const updatedPost = allPosts.map((eachPost) => {\n            if (eachPost.id === editPostId) {\n                return {\n                    ...eachPost,\n                    title: title || eachPost.title,\n                    body: body || eachPost.body,\n                    tags: tags || eachPost.tags\n                };\n            }\n\n            return eachPost;\n        });\n        setAllPosts(updatedPost);\n        toggleModifyPostComponent();\n    };\n\n    const deletePost = (id) => {\n        const modifiedPost = allPosts.filter((eachPost) => {\n            return eachPost.id !== id;\n        });\n        setAllPosts(modifiedPost);\n    };\n\n    if (isCreateNewPost) {\n        return (\n            <CreateNewPost\n                savePostTitleToState={savePostTitleToState}\n                savePostBodyToState={savePostBodyToState}\n                getTitle={getTitle}\n                getBody={getBody}\n                savePost={savePost}\n                allTags={allTags}\n                tags={tags}\n                setTags={setTags}\n                toggleCreateNewPost={toggleCreateNewPost}\n            />\n        );\n    } else if (isModifyPost) {\n        const post = allPosts.find((post) => {\n            return post.id === editPostId;\n        });\n\n        return (\n            <>\n                <ModifyPost\n                    title={post.title}\n                    body={post.body}\n                    defaultValueTag={post.tags}\n                    updatePost={updatePost}\n                    savePostTitleToState={savePostTitleToState}\n                    savePostBodyToState={savePostBodyToState}\n                    toggleCreateNewPost={toggleCreateNewPost}\n                    toggleModifyPostComponent={toggleModifyPostComponent}\n                    allTags={allTags}\n                    tags={tags}\n                    setTags={setTags}\n                />\n            </>\n        );\n    }\n\n    return (\n        <div className=\"w-full\">\n            <div className=\"my-5 mx-4\">\n                <div className=\"flex justify-center items-center\">\n                    <h1 className=\"text-3xl sm:text-4xl font-bold text-center\">Articles</h1>\n                </div>\n\n                <div className=\"flex flex-wrap py-4\">\n                    {allPosts.length > 0 ? allPosts.map(post => {\n                        const { id, title, body, tags } = post;\n                        return (\n                            <Post\n                                key={id}\n                                id={id}\n                                title={title}\n                                body={body}\n                                tags={tags}\n                                editPost={editPost}\n                                deletePost={deletePost}\n                            />\n                        )\n                    }) :\n                        <div className=\"w-full mb-4\">\n                            <div className=\"flex justify-center items-center\">\n                                <span className=\"text-center\">There are no posts yet.</span>\n                            </div>\n                        </div>\n                    }\n                </div>\n\n                <div className=\"flex justify-center items-center\">\n                    <CustomButton\n                        className=\"btn-primary\"\n                        onClick={toggleCreateNewPost}\n                        buttontext=\"Create New Post\"\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}